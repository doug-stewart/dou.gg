---
import '@/styles/reset.css';
import '@/styles/variables.css';
import '@/styles/typography.css';
import '@/styles/forms.css';

import { Image } from 'astro:assets';

import favicon from '@/assets/images/favicon.png';
import funston from '@/assets/images/funston.png';
import GlobalFooter from '@/components/global-footer/GlobalFooter.astro';
import GlobalHeader from '@/components/global-header/GlobalHeader.astro';

interface Props {
    title: string;
    bodyClass?: string;
    wrapperClass?: string;
    isErrorRoute?: boolean;
}

const { title, bodyClass, wrapperClass, isErrorRoute } = Astro.props;
---

<style>
    body {
        --_bg-1: var(--blue-5);
        --_bg-2: var(--purple-5);

        background-color: var(--_bg-2);
        color: var(--blue-1);
        display: grid;
        grid-template:
            'header' auto
            'wrapper' 1fr
            'footer' auto
            / 1fr;
        padding-block: var(--spacing) calc(var(--spacing) * 3);
        padding-inline: calc(var(--spacing) * 3);
        position: relative;
    }

    .wrapper {
        margin-block: calc(var(--spacing) * 5);
        max-width: calc(var(--spacing) * 68);
    }

    .page-bg {
        background: var(--_bg-2) radial-gradient(circle at 0 0, var(--_bg-2), var(--_bg-1))
            no-repeat 0 0;
        inset: 0;
        isolation: isolate;
        overflow: clip;
        position: absolute;
        z-index: -1;

        &::before {
            background-image: url("data:image/svg+xml;utf8,<svg viewBox='0 0 250 250' xmlns='http://www.w3.org/2000/svg' height='250' width='250'><filter id='noiseFilter'><feTurbulence type='fractalNoise' baseFrequency='5' numOctaves='3' stitchTiles='stitch'/></filter><rect width='100%' height='100%' filter='url(%23noiseFilter)'/></svg>"),
                linear-gradient(#333 0, #333 100%);
            content: '';
            filter: contrast(300%) brightness(300%);
            inset: 0;
            mix-blend-mode: multiply;
            position: absolute;
            z-index: 1;
        }
    }

    .funston {
        display: block;
        height: auto;
        mix-blend-mode: luminosity;
        opacity: 0.12;
        width: 100%;
    }
</style>

<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="description" content="Astro description" />
        <meta name="viewport" content="width=device-width" />
        <link rel="icon" type="image/png" href={favicon.src} />
        <meta name="generator" content={Astro.generator} />
        <title>{`${title} ‚ÅÇ Dou.gg`}</title>
        <link rel="sitemap" href="/sitemap-index.xml" />
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
        <link
            href="https://fonts.googleapis.com/css2?family=Jost:ital,wght@0,100..900;1,100..900&display=swap"
            rel="stylesheet"
        />
        <script is:inline type="module">
            if (!('anchorName' in document.documentElement.style)) {
                // eslint-disable-next-line
                import('https://unpkg.com/@oddbird/css-anchor-positioning');
            }
        </script>
        <script>
            const handleDialogToggle = (button: Element) => {
                //eslint-disable-next-line
                const dialogId = button.getAttribute('data-dialog') as string;
                const dialog = document.getElementById(dialogId) as HTMLDialogElement;

                if (dialog.open) {
                    dialog.close();
                } else {
                    dialog.showModal();
                }
            };

            document.addEventListener('click', (event) => {
                const dialogToggle = (event.target as Element).closest('[data-dialog]');
                if (dialogToggle) {
                    event.preventDefault();
                    handleDialogToggle(dialogToggle);
                }
            });
        </script>
    </head>
    <body class:list={[bodyClass]}>
        <GlobalHeader />
        <main class:list={['wrapper', wrapperClass]}>
            <slot />
        </main>
        <GlobalFooter isErrorRoute={isErrorRoute} />
        <div class="page-bg">
            <Image
                src={funston}
                alt=""
                role="presentation"
                class="funston"
                layout="full-width"
                format="avif"
            />
        </div>
    </body>
</html>
