---
// @ts-expect-error 'render' works but for some reason TS is mad about it.
import { getEntry, render } from 'astro:content';
import dayjs from 'dayjs';

import PageHeader from '@/components/page-header/PageHeader.astro';
import Layout from '@/layouts/Layout.astro';

const { slug } = Astro.params;

let post;

try {
    post = await getEntry('blog', slug as string);
} catch (error) {
    return { status: 404, error };
}

if (!post) {
    return { status: 404 };
}

const { title, publishDate } = post.data;
const { Content } = await render(post);
---

<style>
    .date {
        color: var(--green-2);
        font-weight: 500;
        margin-block-start: 0.5em;
        text-transform: uppercase;
    }

    .heading,
    .content {
        max-width: calc(var(--spacing) * 67);

        figure {
            background-color: color-mix(in srgb, transparent, var(--purple-5) 48%);
            border: 1px solid color-mix(in srgb, transparent, var(--blue-1) 12%);
            border-radius: 3px;
            display: block;
            padding: var(--spacing);
            width: 100%;

            img,
            video {
                border-radius: 3px;
                display: block;
                max-width: 100%;
            }
        }

        cite {
            display: block;
            letter-spacing: 0.05em;
            padding-block-start: var(--spacing);
            text-align: center;
        }
    }
</style>

<Layout title={title}>
    <PageHeader class="heading">
        {title}
        <p class="date" slot="after-text">
            <time datetime={`${dayjs(publishDate).format('YYYY-MM-DD')}`}>
                {dayjs(publishDate).format('MMM D, YYYY')}
            </time>
            â€”
        </p>
    </PageHeader>

    <div class="content">
        <Content />
    </div>
</Layout>
