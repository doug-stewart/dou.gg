---
const { href, class: classes, kind, ...props } = Astro.props;
---

{
    kind === 'button' ? (
        <button {...props} class:list={['btn', classes]}>
            <slot />
        </button>
    ) : kind === 'link' ? (
        <a
            {...props}
            class:list={['btn', classes]}
            href={href}
            {...(href.includes('.pdf') && { download: href.split('/').pop() })}
        >
            <slot />
        </a>
    ) : (
        <a
            {...props}
            class:list={['btn', classes]}
            href={href}
            {...(href.includes('.pdf') && { download: href.split('/').pop() })}
        >
            <slot />
        </a>
    )
}

<style>
    @property --_anchor-underline {
        inherits: true;
        initial-value: 0%;
        syntax: '<percentage>';
    }

    .btn {
        --_anchor-underline: 0%;
        --_bg: var(--yellow-3);

        background: var(--yellow-2)
            radial-gradient(ellipse at 50% 100%, var(--_bg) 50%, transparent 0%) no-repeat 50%
            100% / 160% calc(var(--_anchor-underline) * 4);
        background-color: var(--yellow-2);
        border-radius: max(2px, 0.144em);
        box-decoration-break: slice;
        box-shadow: inset 0 calc(max(1px, 0.072em) * -1) hsl(0 0% 0% / 0.36);
        color: var(--green-5);
        display: block;
        line-height: 1.2;
        padding: 0.6em;
        text-decoration: none;
        transition-duration: var(--animation-timing);
        transition-property: --_anchor-underline, border-radius, color;
        transition-timing-function: var(--animation-curve-out);

        &:focus-visible,
        &:hover {
            --_anchor-underline: 100%;
            --_color: var(--green-5);

            transition-timing-function: var(--animation-curve-in);
        }

        img,
        svg {
            display: block;
            height: 1.2em;
            width: auto;
        }

        &:where(:has(> svg)),
        &:where(:has(> img)) {
            display: grid;
            gap: 0.5em;
            grid-template-columns: 1.2em 1fr;
        }
    }
</style>
